plugins {
    id 'application'
}
setupPreprocessor()

group = 'dev.rdh'
version = '0.1a' + getBuildNumber()
ext.manifoldVersion = '2023.1.22'

jar.manifest.attributes.put('Main-Class', 'dev.rdh.imag.Main')

application {
    mainClass = 'dev.rdh.imag.Main'
    applicationDefaultJvmArgs = ['-Xmx4G', '-Xms4G']
}

static String getBuildNumber() {
    String buildNumber = System.getenv("GITHUB_RUN_NUMBER")
    return buildNumber != null ? ".build-${buildNumber}" : ""
}

repositories {
    maven { url 'https://maven.minecraftforge.net/' } // for some reason manifold is hosted here (and on sonatype it doesn't work)
}

dependencies {
    manifold 'strings'
    manifold 'preprocessor'
    compileOnly 'org.jetbrains:annotations:24.0.0'
}

tasks.withType(JavaCompile).configureEach {
    outputs.upToDateWhen { false }
    options.encoding = "UTF-8"
    options.release.set 17
    options.compilerArgs += ['-Xplugin:Manifold', '-Amanifold.strings.simple.disabled=true'] // don't allow simple $foo expressions
}

processResources {
    inputs.property("version", project.version.split(".build-")[0])
    filesMatching('imag/version.txt') {
        expand 'version': project.version.split(".build-")[0]
    }
}

def manifold(String path) {
    def coords = "systems.manifold:manifold-${path}:${manifoldVersion}"
    dependencies {
        annotationProcessor coords
        compileOnly coords
    }
}

def setupPreprocessor() {
    StringBuilder sb = new StringBuilder()
            .append('# DO NOT EDIT\n')

    if(System.getenv('ideLaunch') != null)
        sb.append('DEV=\n')

    //this only applies for local builds since the build.properties file doesn't exist on github
    new File(projectDir, "build.properties").text = sb.toString()
}